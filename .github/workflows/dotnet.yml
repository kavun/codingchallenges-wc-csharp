# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  publish-windows:
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Publish
      run: dotnet publish -c Release -r win-x64 src/WcConsole/WcConsole.csproj
    - name: Rename artifact
      run: mv src/WcConsole/bin/Release/net8.0/win-x64/publish/WcConsole.exe src/WcConsole/bin/Release/net8.0/win-x64/publish/ccwc.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ccwc-win-x64
        path: src/WcConsole/bin/Release/net8.0/win-x64/publish/ccwc.exe

  publish-linux:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Publish
      run: dotnet publish -c Release -r linux-x64 src/WcConsole/WcConsole.csproj
    - name: Rename artifact
      run: mv src/WcConsole/bin/Release/net8.0/linux-x64/publish/WcConsole src/WcConsole/bin/Release/net8.0/linux-x64/publish/ccwc
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ccwc-linux-x64
        path: src/WcConsole/bin/Release/net8.0/linux-x64/publish/ccwc

  publish-macos:
    runs-on: macos-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Publish
      run: dotnet publish -c Release -r osx-x64 src/WcConsole/WcConsole.csproj
    - name: Rename artifact
      run: mv src/WcConsole/bin/Release/net8.0/osx-x64/publish/WcConsole src/WcConsole/bin/Release/net8.0/osx-x64/publish/ccwc
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ccwc-osx-x64
        path: src/WcConsole/bin/Release/net8.0/osx-x64/publish/ccwc

  release-all:
    runs-on: ubuntu-latest
    needs:
      - publish-windows
      - publish-linux
      - publish-macos
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts (windows)
      uses: actions/download-artifact@v3
      with:
        name: ccwc-win-x64
        path: ccwc-win-x64
    - name: Download artifacts (linux)
      uses: actions/download-artifact@v3
      with:
        name: ccwc-linux-x64
        path: ccwc-linux-x64
    - name: Download artifacts (macos)
      uses: actions/download-artifact@v3
      with:
        name: ccwc-osx-x64
        path: ccwc-osx-x64
    - name: Rename artifacts
      run: |
        mv ccwc-win-x64/ccwc.exe ccwc-win-x64/ccwc-win-x64.exe
        mv ccwc-linux-x64/ccwc ccwc-linux-x64/ccwc-linux-x64
        mv ccwc-osx-x64/ccwc ccwc-osx-x64/ccwc-osx-x64
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          LICENSE
          ccwc-win-x64/ccwc-win-x64.exe
          ccwc-linux-x64/ccwc-linux-x64
          ccwc-osx-x64/ccwc-osx-x64
        fail_on_unmatched_files: true
